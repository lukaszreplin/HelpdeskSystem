@model PagedList.IPagedList<HelpdeskSystem.Models.Ticket>
@using PagedList.Mvc;
@using System.Web.UI.WebControls
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Lista zgłoszeń";
}

<h2>Zgłoszenia</h2>

<p>
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Tickets")';return false;">Dodaj nowe zgłoszenie</button>
</p>
@using (Html.BeginForm("Index", "Tickets", FormMethod.Get))
{
    <p>
        <span>
            Wyszukaj zgłoszenie: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Temat lub treść...", @id = "searchString" })
            <input type="submit" class="btn btn-default" value="Szukaj" />
            <input type="submit" class="btn btn-default" value="Wyczyść"
                   onclick="javascript:document.getElementById('searchString').value = ''" />
        </span>
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Id)
        </th>
        <th>
            @Html.ActionLink("Temat", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Data utworzenia", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ModifiedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProfileId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().StatusId)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Profile.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.Name)
            </td>
            <td>
                @Html.ActionLink("Szczegóły", "Details", new { id = item.Id })
                @if (@User.Identity.IsAuthenticated)
                {
                    if (@User.IsInRole("Admin"))
                    {
                        <text> | </text>
                        @Html.ActionLink("Edytuj", "Edit", new { id = item.Id })
                        <text> | </text>
                        @Html.ActionLink("Usuń", "Delete", new { id = item.Id })
                    }
                }
            </td>
        </tr>
    }

</table>
<br />
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
